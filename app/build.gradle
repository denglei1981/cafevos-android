plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-kapt'
    id 'com.alibaba.arouter'
    id 'com.growingio.android.autotracker'
}

def keystorePropertiesFile = rootProject.file("./keystore.properties")
// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    signingConfigs {
        keyconfig {
            storeFile file(keystoreProperties["storeFile"])
            storePassword keystoreProperties["storePassword"]
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
        }
    }
    compileSdkVersion compileSDKVersion
    buildToolsVersion "${buildToolsVersion}"

    defaultConfig {
        applicationId "com.changanford.evos"
        minSdkVersion minSDKVersion
        targetSdkVersion targetSDKVersion
        versionCode 442
        versionName "1.4.5"
        resConfigs "zh"
        ndk {
            abiFilters "armeabi-v7a", 'arm64-v8a'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a'
            universalApk true
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.keyconfig
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "DEBUG_ENABLE", "false" //不显示log
            manifestPlaceholders = [GIO_URL_SCHEME: "growing.7b07b81c0b9c049f", SPL_TASK: "", SPL_SHOW: "true"]
//            android.applicationVariants.all{ variant ->
//                variant.outputs.all{
//                    variant.getPackageApplication().outputDirectory = new File(project.rootDir.path+"/build/outapks/release")
//                    outputFileName = "${project.name}_${defaultConfig.versionName}_${variant.buildType.name}_${variant.productFlavors[0].name}.apk"
//                }
//            }
        }
        debug {
            signingConfig signingConfigs.keyconfig
//            minifyEnabled true
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "DEBUG_ENABLE", "true" //显示log
            manifestPlaceholders = [GIO_URL_SCHEME: "growing.5203f0f6016f1db6", SPL_TASK: "com.changanford.evos", SPL_SHOW: "false"]
        }
    }

    //多渠道打包
    flavorDimensions "default"
    productFlavors {
        //华为、应用宝、360、OPPO、vivo、小米、百度、魅族
        huawei {
            dimension "default"
            manifestPlaceholders = [channel_value: "huawei"]
        }
        yyb {
            dimension "default"
            manifestPlaceholders = [channel_value: "yyb"]
        }
        c360 {
            dimension "default"
            manifestPlaceholders = [channel_value: "c360"]
        }
        oppo {
            dimension "default"
            manifestPlaceholders = [channel_value: "oppo"]
        }
        vivo {
            dimension "default"
            manifestPlaceholders = [channel_value: "vivo"]
        }
        xiaomi {
            dimension "default"
            manifestPlaceholders = [channel_value: "xiaomi"]
        }
        baidu {
            dimension "default"
            manifestPlaceholders = [channel_value: "baidu"]
        }
        meizu {
            dimension "default"
            manifestPlaceholders = [channel_value: "meizu"]
        }
        dev {
            dimension "default"
            manifestPlaceholders = [channel_value: "dev"]
            buildConfigField "Boolean", "DEBUG_ENABLE", "true" //显示log
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    dexOptions { // 提高编译速度
        //是否支持大工程模式
        jumboMode true
        //最大堆内存
        javaMaxHeapSize "4g"
        //使用增量模式构建
        incremental true
        //预编译
        preDexLibraries = true
        //线程数
        threadCount = 8
    }
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    //tab
//    implementation 'com.github.hackware1993:MagicIndicator:1.7.0'
    //gio埋点
    implementation "com.growingio.android:autotracker-cdp:$versions_gio"
    implementation "androidx.lifecycle:lifecycle-process:2.4.1"
    // GioKit
//    debugImplementation "com.growingio.giokit:giokit:1.3.0"
//    releaseImplementation "com.growingio.giokit:giokit-no-op:1.3.0"
    kapt "com.alibaba:arouter-compiler:$versions_router_compiler"

    implementation(project(":common"))
    implementation(project(":home"))

    implementation(project(":car"))
    implementation(project(":shop"))
    implementation(project(":my"))
}